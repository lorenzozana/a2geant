#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass article
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

A Geant4 simulation for the CrystalBall@MAMI Setup
\layout Author

Derek Glazier, University of Edinburgh
\layout Section

Introduction
\layout Standard

As advances in Geant3 particle tracking were discontinued a number of years
 ago, it is clear that to achieve as realistic a simulation as possible
 a move to Geant4 is required.
 In particular simulation of hadronic interactions is thought to be much
 improved with G4 and detailed validation exercises have been carried out.
 G4 uses object-orientated C++ programming.
\layout Standard

The code included here contains the first (quite large) steps in producing
 a G4 simulation for the CB, TAPS, PID, MWPC detector setup for the first
 round of experiments at MAMI.
 Switching to the upcoming beamtime geometry should in principle be straightforw
ard although is not currently implemented.
 
\layout Standard

This report will outline the structure and the status of the simulation,
 named 
\emph on 
A2
\emph default 
, as well as giving some instructions for installing and running, and finally
 list some thoughts on what still needs to be done.
\layout Section

Installation
\layout Standard

Installation of this simulation requires a pre-installed release of G4.
 Users should refer to the G4 webpage for details.
 The simulation has now been upgraded to run with version Geant4.8.2 and it
 is strongly recommended that this version is installed, but it should also
 run with Geant4.8.1.p01.
 The main difference for the user is that the hadronic physics lists are
 now packed with the main source code and do not require explicit compilation
 and inclusion into the Makefile.
 For running Geant4.8.1.p01 the physics lists should be compiled by hand.
\layout Standard

After the G4 system is installed the user is recommended to try and compile
 a few of the G4 examples.
 
\layout Standard

The code package can currently be downloaded from http://nuclear.physics.gla.ac.uk/~
dglazier/A2.
 The user can then unpack A2 into their G4WORKDIR and make.
 A2 uses a ROOT based input/output and so the variable $ROOTSYS should be
 defined.
 The executable A2 should be found in $G4WORKDIR/bin/$G4SYSTEM/.
 
\layout Standard

How to run the simulation is explained in sec.
 
\begin_inset LatexCommand \ref{sec:Running-the-simulation}

\end_inset 

.
 
\layout Section

The A2 Package
\layout Standard

The A2 directory contains all the additional code required to make the simulatio
n work including some example macros for running the simulation in either
 batch or interactive mode.
 The directories contain : 
\layout List
\labelwidthstring 00.00.0000

docs the user manuals, currently this document!
\layout List
\labelwidthstring 00.00.0000

cbsim relevant files from cbsim and the ROOT conversions
\layout List
\labelwidthstring 00.00.0000

macros macro files to control the batch and interactive running of the simulatio
n
\layout List
\labelwidthstring 00.00.0000

include the .hh files for the new A2 classes
\layout List
\labelwidthstring 00.00.0000

src the .cc files for the new A2 classes
\layout List
\labelwidthstring 00.00.0000

pics some graphics created by A2
\layout List
\labelwidthstring 00.00.0000

acquroot contains new files required for 2007 running with AcquRoot
\layout Standard

The file A2.cc controls the simulation by creating the A2 classes and assigning
 them to the G4 manager classes.
 It then allows an interactive session to be run if no initial macro is
 given, i.e just the command A2 is given.
 Or runs in batch mode if a run macro is given, e.g.
 A2 macros/doppi0.mac.
\layout Standard

The files GNUmakefile and hadronic_lists.gmk are required for compilation.
 The file G4History.macro is produced by A2 and saves the interactive commands
 given.
\layout Standard

The files CrystalConvert.in and taps.dat come from cbsim and allow a meaningful
 readout of the detectors.
\layout Section

Geometry
\layout Standard

The A2 class A2DetectorConstruction is responsible for all of the geometry
 built.
 Currently it can call on three detector setups the Crystal Ball, TAPS and
 the PID.
 The Wire Chambers are still to be implemented.
\layout Standard

Each detector has it's own class and A2DetectorConstruction decides whether
 to build it based on a setup macro, see sec.
\begin_inset LatexCommand \ref{sub:Detector-Setup}

\end_inset 

.
\layout Subsection

Materials
\layout Standard

The majority of materials needed are defined via a NIST database, implemented
 via the G4NistManager class.
 A list of the NIST defined materials can be found by typing /material/nist/list
Materials, at the Idle> prompt, or in the file $G4INSTALL/source/materials/src/G
4NistMaterialBuilder.cc.
\layout Standard

Some materials from cbsim are not found in the NIST database and have been
 entered 
\begin_inset Quotes eld
\end_inset 

by hand
\begin_inset Quotes erd
\end_inset 

 in A2DetectorConstruction.cc.
 The extra materials are rohacell, fibreglass, plastic (for PID lightguide),
 mumetal and LD2.
 
\layout Subsection

The Crystal Ball
\layout Standard

The geometry used for the Crystal Ball and surrounding material was taken
 from the cbsim file of Sasha.
 This can be found in the A2/cbsim directory as ugeom_sasha.F.
\layout Subsubsection

Software import from ugeom.F
\layout Standard

Two methods were tried to export the crystal ball geometry directly from
 the cbsim file ugeom.F
\layout Standard

The first was to use the G3toG4 utilities which are part of the G4 libraries.
 This requires an .rz file of the geometry to be produced by cbsim
\begin_inset Foot
collapsed false

\layout Standard

To do this you need to add the line: call grfile(21,
\begin_inset Quotes erd
\end_inset 

crystalball.rz
\begin_inset Quotes erd
\end_inset 

,
\begin_inset Quotes erd
\end_inset 

ON
\begin_inset Quotes erd
\end_inset 

) 
\layout Standard

after call GGCLOS in ugeom.F
\end_inset 

.
 The first problem with this method was the Trap shape used in G4 does not
 accept sides with zero length, which had been used in cbsim to construct
 the triangular faces of the crystals.
 However Ken Livingston showed that this could be bypassed by a simple fix
 in the G4Trap class.
 After this G4 was able to produce a reasonable visualised likeness to the
 CB and TAPS, however attempts to track particles through the CB failed
 as they never underwent any interactions.
\layout Standard

Fortran .rz file can be converted to ROOT readable format via the ROOT utility
 rz2root, so a second attempt to pass cbsim to G4 was made via ROOT's xml
 interface.
 This failed due to a mismatch in the syntax of the ROOT xml output and
 G4 xml input files.
 However even if such a scheme had been successful it almost certainly would
 have also failed to track the particles (for reasons explained below).
 
\layout Subsubsection

Manual import
\layout Standard

After attempting the two software conversions I decided the best solution
 would be to manually rewrite the Fortran code in C++ using the G4 libraries.
 This was realised with the A2DetCrystalBall class.
 When writing the detector I used both the files ugeom_sasha.F and cbsasha.C
 (the ROOT conversion) in A2/cbsim for guidance.
 To simplify matters for myself I decided not to rewrite the prism.F function,
 which calculates the crystal, major and minor triangle parameters, but
 to just take the calculated results from the exported ROOT file cbsasha.C.
\layout Standard

Initially I followed the cbsim recipe for placing the crystals first in
 Minor triangles, then the Minors in Major triangles, then the Majors in
 Hemispheres, then the Hemispheres in the Ball Volume.
 The crystals were again given a Trap volume, however instead of setting
 one side=0cm I have instead set it to 1nm, so G4 will not complain about
 the zero length.
 
\layout Standard

This produced a CB that looked as expected.
 However, again when I fired the particles no interactions occurred in the
 ball!
\layout Standard

The problem lies with the way G4 handles overlapping volumes.
 The fact the two hemispheres nearly exactly overlap meant G4 was unable
 to determine which hemisphere's daughter volumes, i.e Major triangles, it
 was in.
 
\layout Standard

To overcome this I got rid of the 2 hemisphere volumes and place the Major
 triangles directly in the ball volume and applied the rotation and translation
 of the hemispheres directly to the Major Triangles.
 This appeared to give success as particles fired at the ball now interacted.
\layout Standard

However it turned out the problem still existed close to the equator of
 the ball, the reason being that Major triangles here exist for both the
 upper and lower halves.
\layout Standard

My eventual solution to the overlaps problem was to place each crystal individua
lly into the World volume.
 Each crystal is rotated and translated by the product of the transforms
 for it's Minor, Major and Hemisphere.
\layout Standard

Every crystal now tracks particles!
\layout Standard

The next issue to resolve was for the cut crystals in the tunnel regions.
 Previously this was realised by placing one overriding volume CCUT in the
 ball.
 For G4 I chose to subtract off this volume from each individual crystal
 before placing it in the World volume.
 This is done via the G4SubtractionSolid class, and just needs the same
 translation and rotation information as used in placing the crystals and
 so prove to be relatively straightforward.
 Unfortunately the visualisation software I have tried has not been able
 to draw these crystals with the volumes cut to check the procedure.
 I was able to prove to myself that it did work using the G4UnionSolid class
 and by firing particles into the region that should be cut.
\layout Subsection

TAPS
\layout Standard

The TAPS detector was implemented from a straight interpretation of the
 ugeom_taps.F code.
 The class is called A2DetTAPS.
 One slight change I have made is to readout every taps veto detector that
 fires, previously it was only read if it's corresponding BaF2 crystal fired.
 Someone can inform me if I should change back.
\layout Standard

TAPS can be configured without the need for recompilation by specifying
 an input file eg.
 taps.dat, the number of active crystals and the distance from the centre
 of the ball, see section 
\begin_inset LatexCommand \ref{sub:Detector-Setup}

\end_inset 

 for details.
 By this means TAPS can be setup in it's original configuration or it's
 new for 2007 configuration by changing a few lines in the setup macro.
 Currently I am waiting for the new TAPS setup file, so instead if the file
 
\begin_inset Quotes eld
\end_inset 

taps07.dat
\begin_inset Quotes erd
\end_inset 

 is specified a cut is put on crystals greater than 
\begin_inset Formula $23^{\circ}$
\end_inset 

, which are then made dummies.
 This automatically gives a taps output that can be decoded with the normal
 BaF2_MC.dat AcquRoot file, although TAPS should be shifted forward by ~25cm,
 this can be done by adding the line :
\layout Standard

Shift-Coord: TZ -25.0
\layout Standard

to BaF2_MC.dat.
 See the .dat file in the acquroot directory.
\layout Standard

Figure 
\begin_inset LatexCommand \ref{CB-TAPS}

\end_inset 

 shows a visualisation of the CB-TAPS detectors.
\layout Standard


\begin_inset Float figure
wide false
collapsed false

\layout Standard


\begin_inset Graphics
	filename /home/dglazier/geant4/A2/pics/CBTAPS.eps
	width 60page%
	keepAspectRatio

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{CB-TAPS}

\end_inset 

A picture of the CB-TAPS setup using DAWN visualisation.
 Unfortunately the drawing is not perfect, but this is due to the visualisation
 driver not colouring the right areas and not the actual geometry.
 Note, TAPS vetos are in blue and dummies are in red.
\end_inset 


\layout Subsection

The PID
\layout Standard

The implementation for the PID varies from the original, as a more realistic
 right angular wedge shape is used for the scintillator shape, rather than
 a symmetric trapezoid.
 The effect of the change should be small.
\layout Standard

PID 2 is also available for use and can be sepecified in the DetectorSetup.mac
 file.
 PID2 is rotated by 
\begin_inset Formula $180^{\circ}$
\end_inset 

 compared to PID1 and the support structures are made from plastic, to give
 less material at the downstream end.
 The scintillators are 4mm thich compared to 2mm.
\layout Standard

The rotation invalidates the PID_MC.dat AcquRoot file, a new one PID2_MC.dat
 is in the acquroot directory.

\color red
 A new PID cuts file is also required, but is still to be done.
\layout Subsection

Targets
\layout Standard

A choice of either cryo (for LH2, LD2) or solid target have been added.
 These were taken from ugeom_target.F and ugeom_solid_target.F respectively.
 The solid target has hardwired lengths for Lithium, graphite, calcium and
 lead as found in ugeom_solid_target.F, if other materials are needed the
 lengths should be put onto A2SolidTarget.cc.
 Instructions on how to select target and material are given in 
\begin_inset LatexCommand \ref{sub:Detector-Setup}

\end_inset 

.
\layout Section


\begin_inset LatexCommand \label{sec:Physics-Processes-and}

\end_inset 

Physics Processes and Models 
\layout Standard

The main reason for transferring to Geant4 is to utilise up-to-date physics
 models.
 G4 provides detailed information on all of it's processes and models in
 its Physics Reference Manual, available on its website.
 
\layout Subsection

Electromagnetic Physics
\layout Standard

The electromagnetic physics package is well established and it is expected
 that the 
\begin_inset Quotes eld
\end_inset 

standard package
\begin_inset Quotes erd
\end_inset 

 will be optimum for our purposes.
 G4 also offers a 
\begin_inset Quotes eld
\end_inset 

fast
\begin_inset Quotes erd
\end_inset 

 model which gives quicker computional performance at some loss of accuracy,
 but may be sufficient.
 Processes included are :
\layout Standard

For charged particles: Multiple Scattering, Ionisation, Bremsstrahlung,
 Synchotron, Cerenkov, Transition Radiation, High Energy Muon Processes
 and Annihilation.
\layout Standard

And for gammas: Compton, Pair Production, Photo-Electric.
\layout Standard

These models are developed from the Geant3.2.1 package and include bug fixes
 and further development.
\layout Standard

Just to note, G4 also supplies a Low Energy package which extends these
 interactions below kEV, and an optical photon package, which can be used
 for example to track scintillation light using reflection, refraction,
 absorbtion, Rayleigh and wavelength shifting.
\layout Subsection

Hadronic Physics
\layout Standard

Geant3.2.1 utilised either the GEISHA or FLUKA models for hadronic interactions
 (+models from P.
 Pedroni?).
 In G4 GEISHA was converted into the G4LElastic and G4LEHadronicInelastic
 models.
 In addition a multitude of new models have been developed covering energies
 from a fraction of a keV up to 1TeV.
 It is up to the user which models they use and with a large choice of models
 this can be a tricky task.
 G4 does provide some standard PhysicsLists selecting applicable models,
 to help and one of these should be sufficient for standard simulation.
 I have implemented a flexible A2PhysicsList which allows some choice of
 models at run time, for instructions on use see Section 
\begin_inset LatexCommand \ref{sub:Physics-List}

\end_inset 

.
 For best simulation results these models should be tested and compared
 on our detector setup with real experimental data.
 A program of validation exersizes is planned and all users are incouraged
 to make their own tests.
\layout Standard

G4 defines 3 types of Hadronic Model :
\layout Description

Tabulated based on large databases.
\layout Description

Parameterised faster, parameters determined from fits to data,
\layout Description

Theory-based parameters chosen by comparing with thin target data.
\layout Standard

As far is I am currently able to determine our energy regime is best described
 by some of the theory-based models.
 For inelastic channels these are the Cascade models (Binary and Bertini),
 Chiral Invariant Phase Space models and perhaps a Pre-compund model.
 For Elastic channels we should use the G4HadronElastic model.
 These models are applicable for nucleons, pions, kaons, hyperons and ions.
 For more details see the physics reference manual.
\layout Standard

For some purposes it may also be useful to utilise the high precision neutron
 models based on a variety of databases.
 This model is quoted as being valid from thermal energies up to 20MeV.
\layout Standard


\series bold 
\color black
Currently recommended Physics List is QGSP_BIC
\layout Standard

This uses the Binary Cascade model for inelastic hadronic interactions at
 out energies.
 
\layout Standard

Note 
\color black
QGSP_BIC_EMV, has fast electromagnetic, QGSP_BIC_EMX has experimental electromag
netic, (do not know what that means currently!).
 With BERT the Bertini cascade model is used which is faster but possibly
 not so accurate, though the results may be sufficient for our purposes.
 If BIC or BERT is not specified then it defaults to the fast GEISHA type
 parameterisation for inelastic hadronic interactions.
 
\layout Section


\begin_inset LatexCommand \label{sec:Running-the-simulation}

\end_inset 

Running the simulation
\layout Standard

The simulation automatically checks the file DetectorSetup.mac to configure
 the geometry for the run.
 In addition the user can supply the name of a run macro for running in
 batch mode, this includes information on the physics models used as well
 as the event generator.
 Alternatively the simulation can be run in interactive mode, see Sec.
 
\begin_inset LatexCommand \ref{sub:Interactive-Mode}

\end_inset 

.
 
\layout Subsection


\begin_inset LatexCommand \label{sub:Detector-Setup}

\end_inset 

Detector Setup
\layout Standard

Is controlled via the macros/DetectorSetup.mac file.
 Users can edit this to built any subset of detector systems, by switching
 the 1's to 0's.
 By default : 
\layout Standard


\color blue
/A2/det/useCB 1 
\layout Standard


\color blue
/A2/det/useTAPS 1 
\layout Standard


\shape italic 
\color black
Taps can be configured for it's original or 2007 setup.
\layout Standard


\shape italic 
\color black
position and ids
\layout Standard


\color blue
/A2/det/setTAPSFile taps.dat
\layout Standard


\shape italic 
\color black
distance from centre of the ball
\layout Standard


\color blue
/A2/det/setTAPSZ 175 cm
\layout Standard


\shape italic 
\color black
number of active crystals
\layout Standard


\color blue
/A2/det/setTAPSN 510
\layout Standard


\shape italic 
select PID1 (1) or PID2 (2) or no PID (0)
\layout Standard


\color blue
/A2/det/usePID 1
\layout Standard


\shape italic 
apply a z offset
\layout Standard


\color blue
/A2/det/setPIDZ 0.
 cm
\layout Standard


\shape italic 
\color black
The setup of the target is also done here :
\layout Standard


\color blue
/A2/det/useTarget Solid (or Cryo)
\layout Standard


\color blue
/A2/det/targetMaterial G4_Pb (or G4_Ca, ...)
\layout Subsection


\begin_inset LatexCommand \label{sub:Physics-List}

\end_inset 

Physics List
\layout Standard

A brief discussion on the physics models is given in Sec.
 
\begin_inset LatexCommand \ref{sec:Physics-Processes-and}

\end_inset 

.
 Selection of the physics list must be done pre-initialisation, 
\layout Standard


\shape italic 
\color black
Choose a physics list, e.g.
 QGSP_BIC, QGSP_BERT_EMV, LHEP...
 
\layout Standard


\color blue
/A2/physics/Physics QGSP_BIC 
\layout Standard


\shape italic 
\color black
Initialise the simulation
\layout Standard


\color blue
/run/initialize 
\layout Subsection


\begin_inset LatexCommand \label{sub:mkin-Input}

\end_inset 

mkin Input
\layout Standard

Users should obtain an mkin event generator file containing the reaction
 particles of interest.
 This file should be converted to ROOT via the h2root utility.
 2 examples of such files are available alongside this release, kin_pi0p_100000.r
oot and mkin_pin_400mev.root.
 The setup of A2 to read such files can be done either in batch or interactive
 mode using the same commands.
 Using the reaction 
\begin_inset Formula $\gamma p\rightarrow p\pi^{0}$
\end_inset 

 as an example (e.g.
 kin_pi0p_100000.root), the command sequence follows :
\layout Standard


\emph on 
The number of particles to be tracked, 1 proton 2 photons
\layout Standard


\color blue
/A2/generator/NToBeTracked 3
\layout Standard


\emph on 
The mkin indexes of the particles to be tracked
\layout Standard


\emph on 
The proton
\layout Standard


\color blue
/A2/generator/Track 2
\layout Standard


\emph on 
The 2 photons
\layout Standard


\color blue
/A2/generator/Track 3 
\layout Standard


\color blue
/A2/generator/Track 4 
\layout Standard


\emph on 
Note, the 
\begin_inset Formula $\pi^{0}$
\end_inset 

 will not be tracked as it's index 1, is not given.
\layout Standard


\emph on 
The mkin file, converted to root, to be read
\layout Standard


\color blue
/A2/generator/InputFile kin_pi0p_100000.root
\layout Standard

The particles in the file and those to be tracked will be output to the
 screen:
\layout Standard

A2PrimaryGeneratorAction::SetUpRootInput You have chosen to track 3 generated
 particles.
\layout Standard

A2PrimaryGeneratorAction::SetUpRootInput, adding a pi0 as index 1
\layout Standard

A2PrimaryGeneratorAction::SetUpRootInput, adding a proton as index 2
\layout Standard

A2PrimaryGeneratorAction::SetUpRootInput, adding a gamma as index 3
\layout Standard

A2PrimaryGeneratorAction::SetUpRootInput, adding a gamma as index 4 
\layout Standard

Will track proton with index 2 
\layout Standard

Will track gamma with index 3
\layout Standard

Will track gamma with index 4 
\layout Subsection


\begin_inset LatexCommand \label{sub:Interactive-Mode}

\end_inset 

Interactive Mode
\layout Standard

This allows visualisation of the detectors and supports standard G4 gun/
 commands to define the beam or can read an mkin generated file.
 To run in this mode simply type A2 from the A2 directory.
 Any detector set in the DetectorSetup.mac is drawn in the World volume.
 The initial visualisation setup is defined in macros/vis.mac.
 Currently I prefer the OGLIX style viewer, which requires command line
 or macro based commands.
 When using version 4.8.2, this viewer can be used to make movies.
 Additionally the OGLIXm viewer (comment in line /vis/open OGLIXm) allows
 changes in the picture using a GUI system, although this can crash if too
 many commands are given.
 
\layout Standard

The DAWN viewer is best for detailed pictures but requires the downloading
 of additional software.
 Users are encouraged to try the many other viewers available.
\layout Standard

To run in interactive mode users should just type A2 from their G4WORKDIR.
 The physics models can be changed in the macros/vis.mac file, as can the
 default visualisation settings.
\layout Standard

To run an mkin event follow the commands in sec.
 
\begin_inset LatexCommand \ref{sub:mkin-Input}

\end_inset 

.
 Alternatively define a beam using the gun/commands :
\layout Standard


\color blue
/gun/particle proton 
\layout Standard


\color blue
/gun/energy 100 MeV
\layout Standard


\color blue
/gun/direction 1 0.1 0 
\layout Standard

With either method then type
\color blue
 /run/beamOn N
\color default
 to run N events.
 The tracks will be drawn on detector picture.
 In the case of the ball the crystals hit will be coloured with an intensity
 depending on the energy deposit.
 Alternatively the command 
\color blue
/A2/event/drawHitOpt option
\color default
 will change the colour coding to depend on either the (option=)time or
 (option=)depth of the hit.
 This command has to be run prior to the event.
 In the case of TAPS and the PID currently the whole detector will be coloured
 if any element is hit.
\layout Standard

For a list of all possible commands users can type help at the Idle> prompt.
 This includes all standard G4 commands for visualisation, runs, events,
 geometry...
 As well as the new commands for A2, found in the A2 help directory.
\layout Subsection

Batch Mode
\layout Standard

Running in batch mode is straightforward, the executable is given a series
 of commands by a macro file which are implemented before the run.
 Currently this will contain the mkin setup commands from sec.
 
\begin_inset LatexCommand \ref{sub:mkin-Input}

\end_inset 

, and an output file to write the tracked ntuple.
 The latter is done via the command :
\layout Standard


\color blue
/A2/event/setOutputFile test.root
\layout Standard

For example to track the mkin input file kin_pi0p_100000.root, change the
 path to this file in macros/doppi0.mac to wherever you have saved the file
 and give a suitable output file name.
 The from the A2 directory type :
\layout Standard

A2 macros/doppi0.mac
\layout Standard

A large amount of set up info will scroll down the screen giving info on
 the geometry, physics processes etc.
 If the output file does not exist the simulation will start tracking.
 If it does exist the user will be prompted to overwrite or supply a new
 file name.
\layout Standard

On my laptop the example above takes around 2 hours to run.
\layout Standard

The output file can then be read into AcquRoot as in the case of the cbsim
 output.
\layout Section

Things to be done...
\layout Itemize

Include the wire chambers.
 This should be done with some detector readout capability.
 Something like a twisted tube section might do the trick.
\layout Itemize

Optimise tracking algorithm via particle threshold cuts and G4Regions.
\layout Itemize

Investigation of different physics processes.
\layout Itemize

Validation exercises, e.g.
 particle detection efficiencies, neutron energy deposits...
 
\the_end
