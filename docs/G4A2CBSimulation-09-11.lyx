#LyX 1.6.10 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
A Geant4 simulation for the CrystalBall@MAMI Setup
\end_layout

\begin_layout Author
Derek Glazier, University of Edinburgh
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
As advances in Geant3 particle tracking were discontinued a number of years
 ago, it is clear that to achieve as realistic a simulation as possible
 a move to Geant4 is required.
 In particular simulation of hadronic interactions is thought to be much
 improved with G4 and detailed validation exercises have been carried out.
 G4 uses object-orientated C++ programming.
\end_layout

\begin_layout Standard
The code included here contains a G4 simulation for the CB, TAPS, PID, MWPC,
 ToF detector setup for the first and second round of experiments at MAMI.
 
\end_layout

\begin_layout Standard
This report will outline the structure and the status of the simulation,
 named 
\emph on
A2
\emph default
, as well as giving some instructions for installing and running, and finally
 list some thoughts on what still needs to be done.
\end_layout

\begin_layout Section
Installation
\end_layout

\begin_layout Standard
Installation of this simulation requires a pre-installed release of G4.
 Users should refer to the G4 webpage for details.
 The simulation has now been upgraded to run with version Geant4.9.2 and Geant4.9.4
 and it is strongly recommended that one of these versions is installed,
 but it should also run with earlier versions, if the A2 PhysicsList classes
 are copied from an earlier A2 release.
 The default physics list classes are for G9.4.4, if version 4.9.2 is perfered
 the user should remove the 4.9.2 from the files in the src and include directory.
 
\end_layout

\begin_layout Standard
After the G4 system is installed the user is recommended to try and compile
 a few of the G4 examples.
 
\end_layout

\begin_layout Standard
The code package can currently be downloaded from http://www2.ph.ed.ac.uk/nuclear/G4
/.
 The user can then unpack A2 into their G4WORKDIR and make.
 A2 uses a ROOT based input/output and so the variable $ROOTSYS should be
 defined.
 The executable A2 should be found in $G4WORKDIR/bin/$G4SYSTEM/.
 
\end_layout

\begin_layout Standard
How to run the simulation is explained in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Running-the-simulation"

\end_inset

.
 
\end_layout

\begin_layout Standard
Note, from Geant4.9.5, cmake is the recommended make option.
 This is currently not supported in the A2 application, although A2 can
 be compiled with Geant4.9.5 via the geant4make.csh script for backward compatabili
ty.
 For more see the G4 installation guide.
\end_layout

\begin_layout Section
The A2 Package
\end_layout

\begin_layout Standard
The A2 directory contains all the additional code required to make the simulatio
n work including some example macros for running the simulation in either
 batch or interactive mode.
 The directories contain : 
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
docs the user manuals, currently this document!
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
cbsim relevant files from cbsim and the ROOT conversions
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
macros macro files to control the batch and interactive running of the simulatio
n
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
include the .hh files for the new A2 classes
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
src the .cc files for the new A2 classes
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pics some graphics created by A2
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
acquroot contains new files required for running with AcquRoot
\end_layout

\begin_layout Standard
The file A2.cc controls the simulation by creating the A2 classes and assigning
 them to the G4 manager classes.
 It then allows an interactive session to be run if no initial macro is
 given, i.e just the command A2 is given.
 Or runs in batch mode if a run macro is given, e.g.
 A2 macros/doppi0.mac.
\end_layout

\begin_layout Standard
The files GNUmakefile and hadronic_lists.gmk are required for compilation.
 The file G4History.macro is produced by A2 and saves the interactive commands
 given.
\end_layout

\begin_layout Standard
The files CrystalConvert.in and taps.dat come from cbsim and allow a meaningful
 readout of the detectors.
 taps07.dat contains the setup for the new TAPS configuration.
\end_layout

\begin_layout Section
Geometry
\end_layout

\begin_layout Standard
The A2 class A2DetectorConstruction is responsible for all of the geometry
 built.
 Currently it can call on three detector setups the Crystal Ball, TAPS and
 the PID.
 The Wire Chambers are still to be implemented.
\end_layout

\begin_layout Standard
Each detector has it's own class and A2DetectorConstruction decides whether
 to build it based on a setup macro, see sec.
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Detector-Setup"

\end_inset

.
\end_layout

\begin_layout Subsection
Materials
\end_layout

\begin_layout Standard
The majority of materials needed are defined via a NIST database, implemented
 via the G4NistManager class.
 A list of the NIST defined materials can be found by typing /material/nist/list
Materials, at the Idle> prompt, or in the file $G4INSTALL/source/materials/src/G
4NistMaterialBuilder.cc.
\end_layout

\begin_layout Standard
Some materials from cbsim are not found in the NIST database and have been
 entered 
\begin_inset Quotes eld
\end_inset

by hand
\begin_inset Quotes erd
\end_inset

 in A2DetectorConstruction.cc.
 The extra materials are rohacell, fibreglass, plastic (for PID lightguide),
 mumetal and LD2.
 
\end_layout

\begin_layout Subsection
The Crystal Ball
\end_layout

\begin_layout Standard
There are now 2 options for the geometry used for the Crystal Ball and surroundi
ng material.
 The first was taken from early cbsim file from the UCLA group .
 This can be found in the A2/cbsim directory as ugeom_sasha.F or ugeom.F.
 The second is the file updated file from S.
 Prakhov, optimised from new measurements and comparing protons from the
 real experiment to the simulation, this file is in A2/cbsim/ugeom_mamic_apr09.F.
 The main difference is in the tunnel region, in the new version the crystals
 in this region have virutally nothing cut from them and the tunnel has
 a smaller diameter.
 
\end_layout

\begin_layout Subsubsection
Software import from ugeom.F
\end_layout

\begin_layout Standard
Two methods were tried to export the crystal ball geometry directly from
 the cbsim file ugeom.F.
\end_layout

\begin_layout Standard
The first was to use the G3toG4 utilities which are part of the G4 libraries.
 This requires an .rz file of the geometry to be produced by cbsim
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
To do this you need to add the line: call grfile(21,
\begin_inset Quotes erd
\end_inset

crystalball.rz
\begin_inset Quotes erd
\end_inset

,
\begin_inset Quotes erd
\end_inset

ON
\begin_inset Quotes erd
\end_inset

) 
\end_layout

\begin_layout Plain Layout
after call GGCLOS in ugeom.F
\end_layout

\end_inset

.
 The first problem with this method was the Trap shape used in G4 does not
 accept sides with zero length, which had been used in cbsim to construct
 the triangular faces of the crystals.
 However Ken Livingston showed that this could be bypassed by a simple fix
 in the G4Trap class.
 After this G4 was able to produce a reasonable visualised likeness to the
 CB and TAPS, however attempts to track particles through the CB failed
 as they never underwent any interactions.
\end_layout

\begin_layout Standard
Fortran .rz file can be converted to ROOT readable format via the ROOT utility
 rz2root, so a second attempt to pass cbsim to G4 was made via ROOT's xml
 interface.
 This failed due to a mismatch in the syntax of the ROOT xml output and
 G4 xml input files.
 However even if such a scheme had been successful it almost certainly would
 have also failed to track the particles (for reasons explained below).
 
\end_layout

\begin_layout Subsubsection
Manual import
\end_layout

\begin_layout Standard
After attempting the two software conversions I decided the best solution
 would be to manually rewrite the Fortran code in C++ using the G4 libraries.
 This was realised with the A2DetCrystalBall class.
 When writing the detector I used both the files ugeom_sasha.F and cbsasha.C
 (the ROOT conversion) in A2/cbsim for guidance.
 To simplify matters for myself I decided not to rewrite the prism.F function,
 which calculates the crystal, major and minor triangle parameters, but
 to just take the calculated results from the exported ROOT file cbsasha.C.
\end_layout

\begin_layout Standard
Initially I followed the cbsim recipe for placing the crystals first in
 Minor triangles, then the Minors in Major triangles, then the Majors in
 Hemispheres, then the Hemispheres in the Ball Volume.
 The crystals were again given a Trap volume, however instead of setting
 one side=0cm I have instead set it to 1nm, so G4 will not complain about
 the zero length.
 
\end_layout

\begin_layout Standard
This produced a CB that looked as expected.
 However, again when I fired the particles no interactions occurred in the
 ball!
\end_layout

\begin_layout Standard
The problem lies with the way G4 handles overlapping volumes.
 The fact the two hemispheres nearly exactly overlap meant G4 was unable
 to determine which hemisphere's daughter volumes, i.e Major triangles, it
 was in.
 
\end_layout

\begin_layout Standard
To overcome this I got rid of the 2 hemisphere volumes and place the Major
 triangles directly in the ball volume and applied the rotation and translation
 of the hemispheres directly to the Major Triangles.
 This appeared to give success as particles fired at the ball now interacted.
\end_layout

\begin_layout Standard
However it turned out the problem still existed close to the equator of
 the ball, the reason being that Major triangles here exist for both the
 upper and lower halves.
\end_layout

\begin_layout Standard
My eventual solution to the overlaps problem was to place each crystal individua
lly into the World volume.
 Each crystal is rotated and translated by the product of the transforms
 for it's Minor, Major and Hemisphere.
\end_layout

\begin_layout Standard
Every crystal now tracks particles!
\end_layout

\begin_layout Standard
The next issue to resolve was for the cut crystals in the tunnel regions.
 Previously this was realised by placing one overriding volume CCUT in the
 ball.
 For G4 I chose to subtract off this volume from each individual crystal
 before placing it in the World volume.
 This is done via the G4SubtractionSolid class, and just needs the same
 translation and rotation information as used in placing the crystals and
 so prove to be relatively straightforward.
 The cut crystals can be visualised using the RayTracer visualisation and
 if you look down the beamline you can see that the crystals stop at the
 tunnel
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../pics/CutCrystals.jpeg
	width 30page%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-cut-crystal"

\end_inset

The cut crystals of the ball.
\end_layout

\end_inset

.
 In addition I was able to convince to myself that it did work by firing
 particles into the region that should be cut and seeing no interactions.
\end_layout

\begin_layout Subsection
TAPS
\end_layout

\begin_layout Standard
The TAPS detector was implemented from a straight interpretation of the
 ugeom_taps.F code.
 The class is called A2DetTAPS.
 One slight change I have made is to readout every taps veto detector that
 fires, previously it was only read if it's corresponding BaF2 crystal fired.
 Someone can inform me if I should change back.
\end_layout

\begin_layout Standard
TAPS can be configured without the need for recompilation by specifying
 an input file eg.
 taps.dat or taps07.dat for the smaller TAPS, the number of active crystals
 and the distance from the centre of the ball, see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Detector-Setup"

\end_inset

 for details.
 By this means TAPS can be setup in it's original configuration or it's
 new for 2007 configuration by changing a few lines in the setup macro.
 
\end_layout

\begin_layout Standard
The PbWO4 crystals are also available the user can just set the number of
 TAPS rings they would like to change for PbW04.
 They are readout as shown in the acquroot/BaF2_PWO_08.dat etup file, with
 the PbW04 in groups of 4.
 Note when setting number of crystals assume 4 PbW04=1 crystal.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "CB-TAPS"

\end_inset

 shows a visualisation of the CB-TAPS detectors.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../pics/CBTAPS.eps
	width 60page%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "CB-TAPS"

\end_inset

A picture of the CB-TAPS setup using DAWN visualisation.
 Unfortunately the drawing is not perfect, but this is due to the visualisation
 driver not colouring the right areas and not the actual geometry.
 Note, TAPS vetos are in blue and dummies are in red.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The PID
\end_layout

\begin_layout Standard
The implementation for the PID varies from the original, as a more realistic
 right angular wedge shape is used for the scintillator shape, rather than
 a symmetric trapezoid.
 The effect of the change should be small.
\end_layout

\begin_layout Standard
PID 2 is also available for use and can be sepecified in the DetectorSetup.mac
 file.
 PID2 is rotated by 
\begin_inset Formula $180^{\circ}$
\end_inset

 compared to PID1 and the support structures are made from plastic, to give
 less material at the downstream end.
 The scintillators are 4mm thick compared to 2mm.
\end_layout

\begin_layout Standard
The rotation invalidates the PID_MC.dat AcquRoot file, a new one PID2_MC.dat
 is in the acquroot directory.

\color none
 
\end_layout

\begin_layout Subsection
MWPC
\end_layout

\begin_layout Subsubsection
Pre-MAMI-C
\end_layout

\begin_layout Standard
The MWPCs have been implemented by Jamie Robinson of Glasgow University.
 He has preformed a straight translation of the ugeom.F wire chambers including
 the modifications of Kashevarov.
 
\end_layout

\begin_layout Subsubsection
MAMI-C
\end_layout

\begin_layout Standard
The newly constructed wirechambers have initially been implemented by David
 Howdle of Glasgow University.
 Note the anode wires are only constructed if the useMWPC command is given
 a 2 instead of a 1, this is in case they add a large increase in overhead
 with little change in efficiencies.
 In addition to constructing the wirechamber materials a basic readout has
 been implemented.
 the position of a particle as it passes through a cathode layer (of which
 there are 4) is saved to the output ntuple for analysis.
 A basic ReadDecoded algorithm has been added to the TA2CylMWPC class (found
 in the A2/acquroot directory) to reconstruct tracks and a sample setup
 file MWPC_G4A2.dat is also in the acquroot directory, this is an alternative
 to the ReadDecoded method of Sven Schumann which smears the initial proton
 momentum vector.
 The additional branches have been added to the CB_A2MC.Offline file and
 users may need to replace the MCBranchID.h in their acqu_sys/AcquRoot/src
 directory to make sure the MWPC branches are added.
\end_layout

\begin_layout Subsection
Targets
\end_layout

\begin_layout Standard
A choice of either cryo (for LH2, LD2) or solid target have been added.
 These were taken from ugeom_target.F and ugeom_solid_target.F respectively.
 The solid target has hardwired lengths for Lithium, graphite, calcium and
 lead as found in ugeom_solid_target.F, if other materials are needed the
 lengths should be put onto A2SolidTarget.cc.
 Instructions on how to select target and material are given in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Detector-Setup"

\end_inset

.
\end_layout

\begin_layout Standard
The polarised target with solenoidal and saddle coil
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The solenoidal coil was developed by Monica Firminger (Mount Allison) and
 the Saddle coil by Sasha Mushkarenkov (Massachusetts).
\end_layout

\end_inset

 has been implemeted and in addition the magnetic field for the transverse
 target.
 The command 
\end_layout

\begin_layout Standard
/A2/det/targetMagneticCoils Solenoidal
\end_layout

\begin_layout Standard
can be used to switch between these two target geometries.
\end_layout

\begin_layout Subsection
Trigger
\end_layout

\begin_layout Standard
All particles are killed after 2ms.
 This is implemented in the A2SteppingAction.cc UserSteppingAction function.
 In the A2SD.cc class timing windows are place d for TAPS (2
\begin_inset Formula $\mu$
\end_inset

s) and the rest of the detectors (600ns).
 No energy thresholds are applied.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Physics-Processes-and"

\end_inset

Physics Processes and Models 
\end_layout

\begin_layout Standard
The main reason for transferring to Geant4 is to utilise up-to-date physics
 models.
 G4 provides detailed information on all of it's processes and models in
 its Physics Reference Manual, available on its website.
 
\end_layout

\begin_layout Subsection
Electromagnetic Physics
\end_layout

\begin_layout Standard
The electromagnetic physics package is well established and it is expected
 that the 
\begin_inset Quotes eld
\end_inset

standard package
\begin_inset Quotes erd
\end_inset

 will be optimum for our purposes.
 G4 also offers a 
\begin_inset Quotes eld
\end_inset

fast
\begin_inset Quotes erd
\end_inset

 model which gives quicker computional performance at some loss of accuracy,
 but may be sufficient.
 Processes included are :
\end_layout

\begin_layout Standard
For charged particles: Multiple Scattering, Ionisation, Bremsstrahlung,
 Synchotron, Cerenkov, Transition Radiation, High Energy Muon Processes
 and Annihilation.
\end_layout

\begin_layout Standard
And for gammas: Compton, Pair Production, Photo-Electric.
\end_layout

\begin_layout Standard
These models are developed from the Geant3.2.1 package and include bug fixes
 and further development.
\end_layout

\begin_layout Standard
Just to note, G4 also supplies a Low Energy package which extends these
 interactions below kEV, and an optical photon package, which can be used
 for example to track scintillation light using reflection, refraction,
 absorbtion, Rayleigh and wavelength shifting.
\end_layout

\begin_layout Subsection
Hadronic Physics
\end_layout

\begin_layout Standard
Geant3.2.1 utilised either the GEISHA or FLUKA models for hadronic interactions
 (+models from P.
 Pedroni?).
 In G4 GEISHA was converted into the G4LElastic and G4LEHadronicInelastic
 models.
 In addition a multitude of new models have been developed covering energies
 from a fraction of a keV up to 1TeV.
 It is up to the user which models they use and with a large choice of models
 this can be a tricky task.
 G4 does provide some standard PhysicsLists selecting applicable models,
 to help and one of these should be sufficient for standard simulation.
 I have implemented a flexible A2PhysicsList which allows some choice of
 models at run time, for instructions on use see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Physics-List"

\end_inset

.
 For best simulation results these models should be tested and compared
 on our detector setup with real experimental data.
 A program of validation exersizes is planned and all users are incouraged
 to make their own tests.
\end_layout

\begin_layout Standard
G4 defines 3 types of Hadronic Model :
\end_layout

\begin_layout Description
Tabulated based on large databases.
\end_layout

\begin_layout Description
Parameterised faster, parameters determined from fits to data,
\end_layout

\begin_layout Description
Theory-based parameters chosen by comparing with thin target data.
\end_layout

\begin_layout Standard
As far is I am currently able to determine our energy regime is best described
 by some of the theory-based models.
 For inelastic channels these are the Cascade models (Binary and Bertini),
 Chiral Invariant Phase Space models and perhaps a Pre-compund model.
 For Elastic channels we should use the G4HadronElastic model.
 These models are applicable for nucleons, pions, kaons, hyperons and ions.
 For more details see the physics reference manual.
\end_layout

\begin_layout Standard
For some purposes it may also be useful to utilise the high precision neutron
 models based on a variety of databases.
 This model is quoted as being valid from thermal energies up to 20MeV.
\end_layout

\begin_layout Standard

\series bold
\color black
Currently recommended Physics List is QGSP_BIC
\end_layout

\begin_layout Standard
This uses the Binary Cascade model for inelastic hadronic interactions at
 out energies.
 
\end_layout

\begin_layout Standard
If you are analysising K+ then QGSP_BERT is recommended and since G4.9.4 QGSP_BERT
_CHIPS, which calculates the cross sections from the CHIPS model instead
 of the LEP model, and uses Bertini cascade to model the final state.
\end_layout

\begin_layout Standard
Note
\color none
 
\color black
QGSP_BIC_EMV, has fast electromagnetic, QGSP_BIC_EMX has experimental electromag
netic, (do not know what that means currently!).
 With BERT the Bertini cascade model is used which is faster but possibly
 not so accurate, though the results may be sufficient for our purposes.
 If BIC or BERT is not specified then it defaults to the fast GEISHA type
 parameterisation for inelastic hadronic interactions.
 
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Running-the-simulation"

\end_inset

Running the simulation
\end_layout

\begin_layout Standard
The simulation automatically checks the file DetectorSetup.mac to configure
 the geometry for the run.
 In addition the user can supply the name of a run macro for running in
 batch mode, this includes information on the physics models used as well
 as the event generator.
 Alternatively the simulation can be run in interactive mode, see Sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Interactive-Mode"

\end_inset

.
 
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Detector-Setup"

\end_inset

Detector Setup
\end_layout

\begin_layout Standard
Is controlled via the macros/DetectorSetup.mac file.
 Users can edit this to built any subset of detector systems, by switching
 the 1's to 0's.
 By default : 
\end_layout

\begin_layout Standard

\color blue
/A2/det/useCB 1 
\end_layout

\begin_layout Standard
#if the 3rd number in the next line is negative use old geometry, if positive
 use new Prakhov geometry
\end_layout

\begin_layout Standard

\color blue
#the first two numbers give the upper and lower air gap between hemispheres
 
\end_layout

\begin_layout Standard

\color blue
/A2/det/setHemiGap 0.4 0.4 1 cm 
\end_layout

\begin_layout Standard

\color blue
/A2/det/useTAPS 1 
\end_layout

\begin_layout Standard

\shape italic
\color black
Taps can be configured for its original or 2007 setup.
\end_layout

\begin_layout Standard

\shape italic
\color black
position and ids
\end_layout

\begin_layout Standard

\color blue
/A2/det/setTAPSFile taps07.dat
\end_layout

\begin_layout Standard

\shape italic
\color black
distance from centre of the ball
\end_layout

\begin_layout Standard

\color blue
/A2/det/setTAPSZ 145 cm
\end_layout

\begin_layout Standard

\shape italic
\color black
number of active crystals
\end_layout

\begin_layout Standard

\color blue
/A2/det/setTAPSN 384
\end_layout

\begin_layout Standard
number of rings that are PbWO4 
\end_layout

\begin_layout Standard

\color blue
/A2/det/setTAPSPbWO4Rings 2
\end_layout

\begin_layout Standard

\shape italic
select PID1 (1) or PID2 (2) or no PID (0)
\end_layout

\begin_layout Standard

\color blue
/A2/det/usePID 2
\end_layout

\begin_layout Standard

\shape italic
apply a z offset
\end_layout

\begin_layout Standard

\color blue
/A2/det/setPIDZ 0.
 cm
\end_layout

\begin_layout Standard

\shape italic
add in the wire chambers 1 or not 0 (2 also constructs the wires)
\end_layout

\begin_layout Standard

\color blue
/A2/det/useMWPC 2
\end_layout

\begin_layout Standard

\shape italic
\color black
The setup of the target is also done here :
\end_layout

\begin_layout Standard

\color blue
/A2/det/useTarget Solid (or Cryo or Polarized)
\end_layout

\begin_layout Standard

\color blue
/A2/det/targetMaterial G4_Pb (or G4_Ca, ...)
\end_layout

\begin_layout Standard

\color blue
#####Polarised target 
\end_layout

\begin_layout Standard

\color blue
#/A2/det/useTarget Polarized 
\end_layout

\begin_layout Standard

\color blue
#/A2/det/targetMaterial A2_HeButanol 
\end_layout

\begin_layout Standard

\color blue
#/A2/det/targetMagneticCoils Saddle
\end_layout

\begin_layout Standard

\color blue
#/A2/det/setTargetMagneticFieldMap wouter_field_map.dat
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Physics-List"

\end_inset

Physics List
\end_layout

\begin_layout Standard
A brief discussion on the physics models is given in Sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Physics-Processes-and"

\end_inset

.
 Selection of the physics list must be done pre-initialisation, 
\end_layout

\begin_layout Standard

\shape italic
\color black
Choose a physics list, e.g.
 QGSP_BIC, QGSP_BERT_EMV, LHEP...
 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/Physics QGSP_BIC 
\end_layout

\begin_layout Standard

\shape italic
\color black
Initialise the simulation
\end_layout

\begin_layout Standard

\color blue
/run/initialize 
\end_layout

\begin_layout Standard

\noun on
Note
\noun default
 for interactive running this commands are called in the default macro vis.mac
 that is run on initialisation.
 
\end_layout

\begin_layout Subsection
Cuts per region
\end_layout

\begin_layout Standard
To increase tracking efficiency it is possible to define the threshold cuts
 for tracking secondary particles different for each region.
 In this way active elements of the detector can perform more detailed tracking.
 For example with 1mm cuts discrete structures are visible in the deltaE-E
 plots.
 But these are eliminated by using a cut of 0.01 mm in the PID detector.
 **Note since upgrading to version 4.9.4 these structures do not appear even
 with a 1mm cut!!! The following cuts increase the CPU time by about 15%
 compared to 1mm cuts everywhere, (these should by applied in the run macro
 after /run/initialize)
\end_layout

\begin_layout Standard

\color blue
/A2/physics/SetRegion CB 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/RegionCut 0.1 mm 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/SetRegion TAPS 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/RegionCut 0.1 mm 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/SetRegion TAPSV 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/RegionCut 0.01 mm 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/SetRegion PID 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/RegionCut 0.01 mm 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/SetRegion MWPC 
\end_layout

\begin_layout Standard

\color blue
/A2/physics/RegionCut 0.1 mm 
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:mkin-Input"

\end_inset

mkin Input
\end_layout

\begin_layout Standard
Users should obtain an mkin event generator file containing the reaction
 particles of interest.
 This file should be converted to ROOT via the h2root utility.
 2 examples of such files are available alongside this release, kin_pi0p_100000.r
oot and mkin_pin_400mev.root.
 The setup of A2 to read such files can be done either in batch or interactive
 mode using the same commands.
 Using the reaction 
\begin_inset Formula $\gamma p\rightarrow p\pi^{0}$
\end_inset

 as an example (e.g.
 kin_pi0p_100000.root), the command sequence follows :
\end_layout

\begin_layout Standard

\emph on
The number of particles to be tracked, 1 proton 2 photons
\end_layout

\begin_layout Standard

\color blue
/A2/generator/NToBeTracked 3
\end_layout

\begin_layout Standard

\emph on
The mkin indexes of the particles to be tracked
\end_layout

\begin_layout Standard

\emph on
The proton
\end_layout

\begin_layout Standard

\color blue
/A2/generator/Track 2
\end_layout

\begin_layout Standard

\emph on
The 2 photons
\end_layout

\begin_layout Standard

\color blue
/A2/generator/Track 3 
\end_layout

\begin_layout Standard

\color blue
/A2/generator/Track 4 
\end_layout

\begin_layout Standard

\emph on
Note, the 
\begin_inset Formula $\pi^{0}$
\end_inset

 will not be tracked as it's index 1, is not given.
\end_layout

\begin_layout Standard

\emph on
The mkin file, converted to root, to be read
\end_layout

\begin_layout Standard

\color blue
/A2/generator/InputFile kin_pi0p_100000.root (for batch mode)
\end_layout

\begin_layout Standard

\color blue
/A2/generator/PrepareInput kin_pi0p_100000.root (for interactive mode)
\end_layout

\begin_layout Standard
The particles in the file and those to be tracked will be output to the
 screen:
\end_layout

\begin_layout Standard
A2PrimaryGeneratorAction::SetUpRootInput You have chosen to track 3 generated
 particles.
\end_layout

\begin_layout Standard
A2PrimaryGeneratorAction::SetUpRootInput, adding a pi0 as index 1
\end_layout

\begin_layout Standard
A2PrimaryGeneratorAction::SetUpRootInput, adding a proton as index 2
\end_layout

\begin_layout Standard
A2PrimaryGeneratorAction::SetUpRootInput, adding a gamma as index 3
\end_layout

\begin_layout Standard
A2PrimaryGeneratorAction::SetUpRootInput, adding a gamma as index 4 
\end_layout

\begin_layout Standard
Will track proton with index 2 
\end_layout

\begin_layout Standard
Will track gamma with index 3
\end_layout

\begin_layout Standard
Will track gamma with index 4 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard

\noun on
Note
\noun default
 if AqcuMC is used as the event generator it must store the output in ntuple
 format not Tree format.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Interactive-Mode"

\end_inset

Interactive Mode
\end_layout

\begin_layout Standard
This allows visualisation of the detectors and supports standard G4 gun/
 commands to define the beam or can read an mkin generated file.
 To run in this mode simply type A2 from the A2 directory.
 Any detector set in the DetectorSetup.mac is drawn in the World volume.
 The initial visualisation setup is defined in macros/vis.mac.
 Currently I prefer the OGLIX style viewer, which requires command line
 or macro based commands.
 When using version 4.8.2, this viewer can be used to make movies.
 Additionally the OGLIXm viewer (comment in line /vis/open OGLIXm) allows
 changes in the picture using a GUI system, although this can crash if too
 many commands are given.
 
\end_layout

\begin_layout Standard
The DAWN viewer is best for detailed pictures but requires the downloading
 of additional software.
 Users are encouraged to try the many other viewers available.
\end_layout

\begin_layout Standard
To run in interactive mode users should just type A2 from their G4WORKDIR.
 The physics models can be changed in the macros/vis.mac file, as can the
 default visualisation settings.
\end_layout

\begin_layout Standard
To run an mkin event follow the commands in sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mkin-Input"

\end_inset

.
 Alternatively define a beam using the gun/commands :
\end_layout

\begin_layout Standard

\color blue
/gun/particle proton 
\end_layout

\begin_layout Standard

\color blue
/gun/energy 100 MeV
\end_layout

\begin_layout Standard

\color blue
/gun/direction 1 0.1 0 
\end_layout

\begin_layout Standard
With either method then type
\color none
 
\color blue
/run/beamOn N
\color none
 to run N events.
 The tracks will be drawn on detector picture.
 In the case of the ball the crystals hit will be coloured with an intensity
 depending on the energy deposit.
 Alternatively the command 
\color blue
/A2/event/drawHitOpt option
\color none
 will change the colour coding to depend on either the (option=)time or
 (option=)depth of the hit.
 This command has to be run prior to the event.
 In the case of TAPS and the PID currently the whole detector will be coloured
 if any element is hit.
\end_layout

\begin_layout Standard
For a list of all possible commands users can type help at the Idle> prompt.
 This includes all standard G4 commands for visualisation, runs, events,
 geometry...
 As well as the new commands for A2, found in the A2 help directory.
\end_layout

\begin_layout Standard
An output file can be written using the command :
\end_layout

\begin_layout Standard

\color blue
/A2/event/setOutputFile test.root
\end_layout

\begin_layout Subsubsection
GUI and Qt interface
\end_layout

\begin_layout Standard
Thanks to Bill Li (University of Regina) the programme has been adapted
 to run with a geant4 gui and qt visualistion drivers.
 To activate the GUI use the --g command line option when starting an interactiv
e session and for qt visualisation change the vis.mac to use /vis/open OGL.
\end_layout

\begin_layout Subsection
Phase Space Mode
\end_layout

\begin_layout Standard
The A2 simulation can be used to directly produce tracked phase space distributi
ons of particles.
 This can in turn be used to calculate detection efficiencys, energy loss
 corrections, angular resolutions etc.
 The following commands are used :
\end_layout

\begin_layout Standard

\shape italic
use phase space mode (1) (0 is command line 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Interactive-Mode"

\end_inset

, 2 is ROOT input 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mkin-Input"

\end_inset

 which is done outomatically if you specify an input file)
\end_layout

\begin_layout Standard

\color blue
/A2/generator/Mode 1 
\end_layout

\begin_layout Standard

\shape italic
max and min kinetic energies
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetTMax 300 MeV 
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetTMin 0 MeV 
\end_layout

\begin_layout Standard

\shape italic
max and min angle 
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetThetaMax 180 deg 
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetThetaMin 0 deg
\end_layout

\begin_layout Standard

\emph on
for the vertex position
\end_layout

\begin_layout Standard

\emph on
gamma beam widths at target
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetBeamXSigma 0.05 mm 
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetBeamYSigma 0.05 mm
\end_layout

\begin_layout Standard

\emph on
target Z offset
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetTargetZ0 0 mm 
\end_layout

\begin_layout Standard

\emph on
target thickness
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetTargetThick 0.1 cm 
\end_layout

\begin_layout Standard

\emph on
target x-y radius
\end_layout

\begin_layout Standard

\color blue
/A2/generator/SetTargetRadius 2 cm 
\end_layout

\begin_layout Standard
The kinematics of the particle are stored for each event in the beam branch
 of the ROOT output ntuple.
\end_layout

\begin_layout Standard
See also doPhaseSpace.mac.
\end_layout

\begin_layout Subsection
Overlap Mode
\end_layout

\begin_layout Standard
As an extention to standard phase space you can also create an additional
 particle at a fixed angle to the first, this maybe useful for investigating
 overlapping cluster algorithms.
\end_layout

\begin_layout Standard

\color blue
/A2/generator/Mode 3
\end_layout

\begin_layout Standard

\color blue
A2/generator/SetSplitTheta 10 deg
\end_layout

\begin_layout Standard
The rest of the commands are as for phase space.
\end_layout

\begin_layout Subsection
Batch Mode
\end_layout

\begin_layout Standard
Running in batch mode is straightforward, the executable is given a series
 of commands by a macro file which are implemented before the run.
 Currently this will contain the mkin setup commands from sec.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:mkin-Input"

\end_inset

, and an output file to write the tracked ntuple.
 The latter is done via the command :
\end_layout

\begin_layout Standard

\color blue
/A2/event/setOutputFile test.root
\end_layout

\begin_layout Standard
For example to track the mkin input file kin_pi0p_100000.root, change the
 path to this file in macros/doppi0.mac to wherever you have saved the file
 and give a suitable output file name.
 The from the A2 directory type :
\end_layout

\begin_layout Standard
A2 macros/doppi0.mac
\end_layout

\begin_layout Standard
A large amount of set up info will scroll down the screen giving info on
 the geometry, physics processes etc.
 If the output file does not exist the simulation will start tracking.
 If it does exist the user will be prompted to overwrite or supply a new
 file name.
\end_layout

\begin_layout Standard
On my laptop the example above takes around 2 hours to run.
\end_layout

\begin_layout Standard
The output file can then be read into AcquRoot as in the case of the cbsim
 output.
\end_layout

\begin_layout Standard
It is also possible to omit the setOutputFile and Inputfile commands and
 just give the full address of a .root file as a second command line argument,
 i.e :
\end_layout

\begin_layout Standard
A2 macros/doppi0.mac /scratch/analysethis.root
\end_layout

\begin_layout Standard
The output file is prepended with 
\begin_inset Quotes eld
\end_inset

tr_
\begin_inset Quotes erd
\end_inset

 and placed in the same directory as the input file.
 Or you can give an ouput file name as a 3rd arguement:
\end_layout

\begin_layout Standard
A2 macros/doppi0.mac /scratch/analysethis.root /scratchtothis.root
\end_layout

\begin_layout Standard
The setOutputFile and Inputfile commands in the macro will be ignored in
 favour of the command line filenames.
\end_layout

\begin_layout Standard
It is also possible to specidy the macro, input and output files, number
 of events to simulate adn the detector setup file as command line options:
\end_layout

\begin_layout Standard
A2 --mac=<mac file> --if=<input file> --of=<output file> --det=<detector
 setup file> --num=NNN --g.
\end_layout

\begin_layout Standard
The option num specifies the number of events to simulate, which should
 be less than or equal to the number of events in the file.
 The option --g starts an interactive gui rather than terminal control.
\end_layout

\begin_layout Standard
Note, if an output file already exists, the simulation no longer prompts
 for a different name but adds a 
\begin_inset Quotes eld
\end_inset

A2copy1 
\begin_inset Quotes eld
\end_inset

 to the name, if this exists the number 1 is incremented and so on.
\end_layout

\begin_layout Subsection
Output
\end_layout

\begin_layout Standard

\color black
Currently 3 extra branches have been added to the ROOT output.
 These are NaI crystal time, TAPS veto ID and TAPS veto energy.
 
\end_layout

\begin_layout Standard
Branches from cbsim that exist but are not filled are eleak, and etapfs.
\end_layout

\begin_layout Standard
To run the output file through the AcquRoot reconstruction analysis the
 command should be :
\end_layout

\begin_layout Standard
AcquRoot --offline CB_A2MC.Offline
\end_layout

\begin_layout Standard
Where CB_A2MC.Offline is a setup file found in your $acqu/data directory.
 The name of the G4 output file should be specified in CBMC.Offline.
 The correct tree of setup files should be chosen for MAMI-B and MAMI-C
 beamtimes.
 Examples are given in the A2/acquroot directory
\end_layout

\begin_layout Section
Things to be done...
\end_layout

\begin_layout Itemize
Cherenkov detector
\end_layout

\begin_layout Itemize
TAPS fast and slow gates.
\end_layout

\begin_layout Itemize
Validation exercises, e.g.
 particle detection efficiencies, neutron energy deposits...
 
\end_layout

\end_body
\end_document
