
#include "A2PhysicsListMessenger.hh"

#include "A2PhysicsList.hh"
#include "G4UIcmdWithADoubleAndUnit.hh"
#include "G4UIcmdWithAString.hh"
#include "G4UIcmdWithoutParameter.hh"
#include "G4UIdirectory.hh"

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

A2PhysicsListMessenger::A2PhysicsListMessenger(A2PhysicsList* pPhys)
:fpPhysicsList(pPhys)
{   
  fphysDir = new G4UIdirectory("/A2/physics/");
  fphysDir->SetGuidance("physics control");
  
  fgammaCutCmd = new G4UIcmdWithADoubleAndUnit("/A2/physics/CutGamma",this);  
  fgammaCutCmd->SetGuidance("Set gamma cut.");
  fgammaCutCmd->SetParameterName("Gcut",false);
  fgammaCutCmd->SetUnitCategory("Length");
  fgammaCutCmd->SetRange("Gcut>0.0");
  fgammaCutCmd->AvailableForStates(G4State_PreInit,G4State_Idle);

  felectCutCmd = new G4UIcmdWithADoubleAndUnit("/A2/physics/CutEl",this);  
  felectCutCmd->SetGuidance("Set electron cut.");
  felectCutCmd->SetParameterName("Ecut",false);
  felectCutCmd->SetUnitCategory("Length");
  felectCutCmd->SetRange("Ecut>0.0");
  felectCutCmd->AvailableForStates(G4State_PreInit,G4State_Idle);
  
  fposCutCmd = new G4UIcmdWithADoubleAndUnit("/A2/physics/CutPos",this);
  fposCutCmd->SetGuidance("Set positron cut.");
  fposCutCmd->SetParameterName("Pcut",false);
  fposCutCmd->SetUnitCategory("Length");
  fposCutCmd->SetRange("Pcut>0.0");
  fposCutCmd->AvailableForStates(G4State_PreInit,G4State_Idle);

  fallCutCmd = new G4UIcmdWithADoubleAndUnit("/A2/physics/CutsAll",this);
  fallCutCmd->SetGuidance("Set cut for all.");
  fallCutCmd->SetParameterName("cut",false);
  fallCutCmd->SetUnitCategory("Length");
  fallCutCmd->SetRange("cut>0.0");
  fallCutCmd->AvailableForStates(G4State_PreInit,G4State_Idle);

  fpListCmd = new G4UIcmdWithAString("/A2/physics/Physics",this);
  fpListCmd->SetGuidance("Add modula physics list.");
  fpListCmd->SetParameterName("PList",false);
  fpListCmd->AvailableForStates(G4State_PreInit);

  flistCmd = new G4UIcmdWithoutParameter("/A2/physics/ListPhysics",this);
  flistCmd->SetGuidance("Available Physics Lists");
  flistCmd->AvailableForStates(G4State_PreInit,G4State_Idle);

  fRegCutCmd = new G4UIcmdWithADoubleAndUnit("/A2/physics/RegionCut",this);
  fRegCutCmd->SetGuidance("Set cut for selected region. Need to call SetRegion first or defaults to world");
  fRegCutCmd->SetParameterName("cut",false);
  fRegCutCmd->SetUnitCategory("Length");
  fRegCutCmd->SetRange("cut>0.0");
  fRegCutCmd->AvailableForStates(G4State_PreInit,G4State_Idle);

  fRegCmd = new G4UIcmdWithAString("/A2/physics/SetRegion",this);
  fRegCmd->SetGuidance("Select region to set cut for");
  fRegCmd->SetParameterName("Region",false);
  fRegCmd->AvailableForStates(G4State_PreInit,G4State_Idle);
  //fRegion="World";
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

A2PhysicsListMessenger::~A2PhysicsListMessenger()
{
  delete fgammaCutCmd;
  delete felectCutCmd;
  delete fposCutCmd;
  delete fallCutCmd;
  delete fpListCmd;
  delete flistCmd;
  delete fRegCutCmd;
  delete fRegCmd;
  delete fphysDir;
}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

void A2PhysicsListMessenger::SetNewValue(G4UIcommand* command,
                                          G4String newValue)
{
  if( command == fgammaCutCmd )
    fpPhysicsList->SetCutForGamma(fgammaCutCmd->GetNewDoubleValue(newValue));

  if( command == felectCutCmd )
    fpPhysicsList->SetCutForElectron(felectCutCmd->GetNewDoubleValue(newValue));

  if( command == fposCutCmd )
   fpPhysicsList->SetCutForPositron(fposCutCmd->GetNewDoubleValue(newValue));

  if( command == fallCutCmd )
    {
      G4double cut = fallCutCmd->GetNewDoubleValue(newValue);
      fpPhysicsList->SetCutForGamma(cut);
      fpPhysicsList->SetCutForElectron(cut);
      fpPhysicsList->SetCutForPositron(cut);
    }

  if( command == fpListCmd ) {
    G4String name = newValue;
    if(name == "PHYSLIST") {
      char* path = getenv(name);
      if (path) name = G4String(path);
      else {
        G4cout << "### A2PhysicsListMessenger WARNING: "
	       << " environment variable PHYSLIST is not defined"
	       << G4endl;
	return; 
      }
    }
    fpPhysicsList->AddPhysicsList(name);
  }
  if( command == fRegCutCmd )
    {
      G4double cut = fRegCutCmd->GetNewDoubleValue(newValue);
      G4cout<<"Set cut of "<<cut/mm<<" for "<<fRegion<<G4endl;
      fpPhysicsList->SetCutForRegion(fRegion,cut);
     }

  if( command == fRegCmd ) {
    fRegion = newValue;
    G4cout<<"Selected region "<<fRegion<<G4endl;
  }

  if( command == flistCmd )
    fpPhysicsList->List();

}

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......
